@model student_attendance.Models.Attendance

@{
    ViewBag.Title = "Edit Attendance";
}

<h2>Edit Attendance</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Attendance</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.attendance_id)

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.date.Year, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" name="date" value="@Model.date.ToShortDateString()" />
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.entry_time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.entry_time, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="text" class="form-control" name="entry_time" value="@Model.entry_time.ToShortTimeString()" />
                @Html.ValidationMessageFor(model => model.entry_time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Status</label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })*@
                <select name="status" class="form-control">
                    <option value="0" @if (Model.status == "0") { 
                                                                    @:selected
                                                                }>Absent</option>
                    <option value="1" @if (Model.status == "1") { 
                                                                    @:selected
                                                                }>Present</option>
                    <option value="2" @if (Model.status == "2") { 
                                                                    @:selected
                                                                }>Late</option>
                </select>
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Student</label>
                    <div class="col-md-10">
                        @Html.DropDownList("student_id", null, htmlAttributes: new { @class = "form-control", @readonly = "true", @style = "pointer-events: none;" })
                        @Html.ValidationMessageFor(model => model.student_id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Schedule</label>
                    <div class="col-md-10">
                        @Html.DropDownList("schedule_id", null, htmlAttributes: new { @class = "form-control", @readonly = "true", @style = "pointer-events: none;" })
                        @Html.ValidationMessageFor(model => model.schedule_id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", new { id = "reject" }, new { @class = "btn btn-primary" })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
